# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-07-19 17:09
from __future__ import unicode_literals

import colorful.fields
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('rank', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'ordering': ('-rank', '-date_created'),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', colorful.fields.RGBColorField(colors=['#f2f3f4', '#222222', '#f3c300', '#875692', '#f38400', '#a1caf1', '#be0032', '#c2b280', '#848482', '#008856', '#e68fac', '#0067a5', '#f99379', '#604e97', '#f6a600', '#b3446c', '#dcd300', '#882d17', '#8db600', '#654522', '#e25822', '#2b3d26'], unique=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('poll',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('date_start', models.DateField(blank=True, default=datetime.date.today, null=True, verbose_name='Starts on')),
                ('time_start', models.TimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Starts at')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='Ends on')),
                ('time_end', models.TimeField(blank=True, null=True, verbose_name='Ends at')),
                ('is_multi_day', models.BooleanField(default=False)),
                ('location', models.CharField(blank=True, max_length=50)),
                ('details', models.TextField(blank=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='main.Category')),
            ],
            options={
                'ordering': ('-date_start', '-time_start'),
            },
        ),
        migrations.CreateModel(
            name='ImageFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_file', models.ImageField(upload_to='main/images/')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_files', to='main.Announcement')),
            ],
        ),
        migrations.CreateModel(
            name='ImageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_link', models.URLField()),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_links', to='main.Announcement')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('date_open', models.DateTimeField(auto_now_add=True)),
                ('date_close', models.DateTimeField(blank=True, null=True)),
                ('is_open', models.BooleanField(default=True)),
                ('rank', models.IntegerField(blank=True, default=0)),
            ],
            options={
                'ordering': ('is_open', 'rank', '-date_close', '-date_open'),
            },
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a 10 digit value', regex='^\\d{10}$')], verbose_name='Student ID')),
                ('grade_level', models.IntegerField(choices=[(0, 'Freshman'), (1, 'Sophomore'), (2, 'Junior'), (3, 'Senior')], default=0, verbose_name='Grade Level')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(max_length=6, unique=True, verbose_name='Room Number')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Please enter a 10 digit value', regex='^\\d{10}$')], verbose_name='Phone Number')),
                ('is_student', models.BooleanField(default=False)),
                ('is_teacher', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='main.Choice')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='main.Poll')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='main.UserProfile')),
            ],
            options={
                'ordering': ('poll', 'choice'),
            },
        ),
        migrations.CreateModel(
            name='YouTubeVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Video Title')),
                ('youtube_video', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='Invalid YouTube video id', regex='^[a-zA-Z0-9_-]{11}$')], verbose_name='YouTube Video ID')),
                ('announcement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='youtube_videos', to='main.Announcement')),
            ],
        ),
        migrations.AddField(
            model_name='teacherprofile',
            name='user_profile',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to='main.UserProfile'),
        ),
        migrations.AddField(
            model_name='studentprofile',
            name='user_profile',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to='main.UserProfile'),
        ),
        migrations.AddField(
            model_name='poll',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polls', to='main.UserProfile'),
        ),
        migrations.AddField(
            model_name='poll',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='polls', to='main.Category'),
        ),
        migrations.AddField(
            model_name='choice',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='main.Poll'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='main.UserProfile'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcements', to='main.Category'),
        ),
    ]
